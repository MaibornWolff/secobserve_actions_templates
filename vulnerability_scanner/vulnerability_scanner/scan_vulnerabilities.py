import os
from vulnerability_scanner.configuration import (
    SCANNER_VARIABLES,
    clean_configuration,
    get_configuration_from_file,
    set_importer_configuration,
    set_scanner_configuration,
)

SCANNERS = [
    "bandit",
    "checkov",
    "cryptolyzer",
    "drheader",
    "eslint",
    "gitleaks",
    "grype_image",
    "kics",
    "semgrep",
    "trivy_filesystem",
    "trivy_image",
]


def scan_vulnerabilities():
    try:
        error = False
        configuration = get_configuration_from_file()

        for key in configuration.keys():
            scanner_configuration = configuration.get(key)
            config_scanner = scanner_configuration.get("SCANNER")
            for scanner in SCANNERS:
                if scanner == config_scanner:
                    clean_configuration()
                    set_importer_configuration(configuration)
                    set_scanner_configuration(scanner_configuration)
                    exit_code = os.system(f"/entrypoints/entrypoint_{scanner}.sh")

                    if exit_code > 0:
                        error = True
                        print(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>")
                        print(f"ERROR in {key} scanning or importing")
                        print("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<")
        if error:
            exit(1)
    except Exception as e:
        print(f"{e.__class__.__name__}: {str(e)}")
        exit(1)


if __name__ == "__main__":
    scan_vulnerabilities()
